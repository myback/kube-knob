---
- name: Create service account for kubelet checks
  command: "kubectl -n kube-system create sa kubelet-checks"
  register: result
  changed_when: '"created" in result.stdout'
  ignore_errors: True
  delegate_to: '{{ first_master }}'
  when: sa_token is not defined

- name: Get kubelet checks token from Kubernetes
  command: "kubectl -n kube-system get secret -o=jsonpath='{.items[?(@.metadata.annotations.kubernetes\\.io/service-account\\.name==\"kubelet-checks\")].data.token}'"
  changed_when: false
  register: temp_sa_token
  delegate_to: '{{ first_master }}'
  when: sa_token is not defined
  tags:
    - join

- name: Set fact kubelet checks token
  set_fact:
    sa_token: '{{ temp_sa_token.stdout | b64decode }}'
  when: temp_sa_token.stdout is defined
  tags:
    - join

- name: Read the kube-apiserver manifest
  slurp:
    path: /etc/kubernetes/manifests/kube-apiserver.yaml
  register: kube_apiserver_manifest
  tags:
    - join

- name: Extract yaml to variable
  set_fact:
    kube_apiserver_pod: '{{ kube_apiserver_manifest["content"] | b64decode | from_yaml }}'
    kube_apiserver_pod_update: '{{ lookup("template", "anonymous-auth.patch.j2") | from_yaml }}'
  tags:
    - join

- name: Modify kube-apiserver container description
  set_fact:
    kube_apiserver_pod_container: '{{ kube_apiserver_pod.spec.containers[0] | combine(kube_apiserver_pod_update, recursive=True) }}'
  tags:
    - join

- name: Modify kube-apiserver manifest
  set_fact:
    kube_apiserver_pod: '{{ kube_apiserver_pod | combine({"spec":{"containers":[kube_apiserver_pod_container]}}, recursive=True) }}'
  tags:
    - join

- name: Write modified kube-apiserver.yaml
  copy:
    content: '{{ kube_apiserver_pod | to_nice_yaml(indent=2) }}'
    dest: /etc/kubernetes/manifests/kube-apiserver.yaml
    mode: 0640
  tags:
    - join
